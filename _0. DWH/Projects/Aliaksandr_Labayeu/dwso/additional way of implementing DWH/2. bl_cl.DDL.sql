-- DROPPING synonyms
execute pkg_drop.DROP_Proc ('EXT_PRODUCTS','synonym');
execute pkg_drop.DROP_Proc ('EXT_CONSUMERS','synonym');
execute pkg_drop.DROP_Proc ('EXT_DEPARTMENTS','synonym');
execute pkg_drop.DROP_Proc ('EXT_LOCATIONS','synonym');
execute pkg_drop.DROP_Proc ('EXT_PRODUCTS','synonym');
execute pkg_drop.DROP_Proc ('EXT_LOCATIONS','synonym');

-- DROPPING tables
---- wrk
execute pkg_drop.DROP_Proc('wrk_products','table');
execute pkg_drop.DROP_Proc('wrk_consumers','table');
execute pkg_drop.DROP_Proc('wrk_departments','table');
execute pkg_drop.DROP_Proc('wrk_promotions','table');
execute pkg_drop.DROP_Proc('wrk_sales','table');
execute pkg_drop.DROP_Proc('wrk_locations','table');
---- cls
execute pkg_drop.DROP_Proc('cls_products','table');
execute pkg_drop.DROP_Proc('cls_consumers','table');
execute pkg_drop.DROP_Proc('cls_departments','table');
execute pkg_drop.DROP_Proc('cls_promotions','table');
execute pkg_drop.DROP_Proc('cls_sales','table');
execute pkg_drop.DROP_Proc('cls_locations','table');
---- 3nf
execute pkg_drop.DROP_Proc('bl_3nf.ADDRESSES','table');
execute pkg_drop.DROP_Proc('bl_3nf.CITIES','table');
execute pkg_drop.DROP_Proc('bl_3nf.CONSUMER_RATE','table');
execute pkg_drop.DROP_Proc('bl_3nf.CONSUMERS','table');
execute pkg_drop.DROP_Proc('bl_3nf.COUNTRIES','table');
execute pkg_drop.DROP_Proc('bl_3nf.DEPARTMENTS','table');
execute pkg_drop.DROP_Proc('bl_3nf.LOCALIZATION','table');
execute pkg_drop.DROP_Proc('bl_3nf.PACKAGE','table');
execute pkg_drop.DROP_Proc('bl_3nf.PAYMENTS','table');
execute pkg_drop.DROP_Proc('bl_3nf.PRODUCT_CATEGORY','table');
execute pkg_drop.DROP_Proc('bl_3nf.PRODUCT_SUBCATEGORY','table');
execute pkg_drop.DROP_Proc('bl_3nf.PRODUCTS','table');
execute pkg_drop.DROP_Proc('bl_3nf.PROMOTIONS','table');
execute pkg_drop.DROP_Proc('bl_3nf.REGIONS','table');
execute pkg_drop.DROP_Proc('bl_3nf.RESPONSIBLE','table');
execute pkg_drop.DROP_Proc('bl_3nf.SALES','table');
execute pkg_drop.DROP_Proc('bl_3nf.RESPONSIBLE','table');
execute pkg_drop.DROP_Proc('bl_3nf.RESPONSIBLE','table');

CREATE OR REPLACE SYNONYM EXT_PRODUCTS FOR sa_src.ext_products;
CREATE OR REPLACE SYNONYM EXT_CONSUMERS FOR sa_src.ext_consumers;
CREATE OR REPLACE SYNONYM EXT_DEPARTMENTS FOR sa_src.ext_departments;
CREATE OR REPLACE SYNONYM EXT_LOCATIONS FOR sa_src.EXT_LOCATIONS;

--==========================================================================================
-- Creating Tables
-- Working tables
--==========================================================================================
CREATE TABLE wrk_products AS SELECT * FROM EXT_PRODUCTS;
CREATE TABLE wrk_consumers AS SELECT * FROM EXT_CONSUMERS;
CREATE TABLE wrk_departments AS SELECT * FROM EXT_DEPARTMENTS;
CREATE TABLE wrk_locations AS SELECT * FROM EXT_LOCATIONS;
CREATE TABLE wrk_PROMOTIONS AS 
          SELECT
            ROUND (dbms_random.value (1,99), 0 ) || dbms_random.string('b',2) || ROUND (dbms_random.value (1,99), 0 ) AS PROMO_CODE,
            'Promotion ' || dbms_random.string('b',4) || ROUND(dbms_random.value(4, 99)) AS PROMO_NAME,
            PROMO_NAME AS PROMO_DESC,
            PROMO_COST AS PROMO_COST
          FROM SH.PROMOTIONS
          ORDER BY 1;

--==========================================================================================
-- CLS TABLES
--==========================================================================================

-- CLS_PRODUCT_CATEGORY
execute pkg_drop.DROP_proc('cls_PRODUCT_CATEGORY','table');   
CREATE TABLE CLS_PRODUCT_CATEGORY
(
  "CATEGORY_CODE" VARCHAR2(50),
  "CATEGORY_NAME" VARCHAR2(50),
  "UPDATE_DT" DATE,
  "INSERT_DT" DATE
)
;

-- CLS_PRODUCT_SUBCATEGORY
execute pkg_drop.DROP_proc('CLS_PRODUCT_SUBCATEGORY','table');           
CREATE TABLE CLS_PRODUCT_SUBCATEGORY
(
	"SUBCATEGORY_CODE" VARCHAR2(50),
	"SUBCATEGORY_NAME" VARCHAR2(50),
	"CATEGORY_CODE" VARCHAR(10),
	"SIZE" NUMBER(3) DEFAULT ON NULL '-98',
	"TOBACCO" NUMBER(3,1) DEFAULT ON NULL '-99',
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

-- CLS_LOCALIZATION [lookup]
execute pkg_drop.DROP_proc('CLS_LOCALIZATION','table');           
CREATE TABLE "CLS_LOCALIZATION"
(
	"LOCALIZATION_ID" NUMBER(8) NOT NULL,
	"LOCALIZATION_NAME" VARCHAR2(50)
)
;

execute pkg_drop.DROP_proc('seq_localization','sequence');
CREATE SEQUENCE seq_localization
        INCREMENT BY 1 
            START WITH 1 
         MINVALUE 1 
          NOCYCLE;

-- CLS_PRODUCTS
execute pkg_drop.DROP_proc('CLS_PRODUCTS','table');           
CREATE TABLE CLS_PRODUCTS
(
	"PRODUCT_CODE" VARCHAR2(20),
	"PRODUCT_NAME" VARCHAR2(50),
	"LOCALIZATION_CODE" VARCHAR(10),
	"CATEGORY_CODE" VARCHAR2(20),
  "PRICE" NUMBER (8,2),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

-- CLS_OCCUPATION
execute pkg_drop.DROP_proc('CLS_OCCUPATION','table');           
CREATE TABLE CLS_OCCUPATION
(
	"OCCUPATION_CODE" VARCHAR2(20),
	"OCCUPATION_NAME" VARCHAR2(100),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_occupation','sequence');
CREATE SEQUENCE seq_occupation
        INCREMENT BY 1 
            START WITH 1 
         MINVALUE 1 
          NOCYCLE;   

-- CLS_RESPONSIBLE
execute pkg_drop.DROP_proc('CLS_RESPONSIBLE','table');           
CREATE TABLE CLS_RESPONSIBLE
(
	"RESP_CODE" VARCHAR2(50),
	"FIRST_NAME" VARCHAR2(50),
	"LAST_NAME" VARCHAR2(50),
	"PHONE" VARCHAR2(50),
	"EMAIL" VARCHAR2(50),
	"BIRTHDAY" DATE,
	"AGE" NUMBER(3),
	"OCCUPATION_CODE" VARCHAR(20),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

-- CLS_CONSUMER_RATE
execute pkg_drop.DROP_proc('CLS_CONSUMER_RATE','table');
CREATE TABLE CLS_CONSUMER_RATE
(
	"RATE_ID" NUMBER(8) NOT NULL,
	"RATE_TITLE" VARCHAR2(50)
)
;

-- CLS_REGIONS
execute pkg_drop.DROP_proc('CLS_REGIONS','table');
CREATE TABLE CLS_REGIONS (
  REGION_CODE VARCHAR2(3),
  REGION_NAME VARCHAR2(50),
  "UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
  );

-- CLS_SUBREGIONS
execute pkg_drop.DROP_proc('CLS_SUBREGIONS','table');
CREATE TABLE CLS_SUBREGIONS (
  SUBREGION_CODE VARCHAR2(4),
  SUBREGION_NAME VARCHAR2(100),
  REGION_CODE VARCHAR(3),
  "UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
  );

-- CLS_COUNTRIES
execute pkg_drop.DROP_proc('CLS_COUNTRIES','table');
CREATE TABLE CLS_COUNTRIES (
  country_code2 VARCHAR2(10),
  country_code3 VARCHAR2(10),
  country_name VARCHAR2(100),
  subregion_code VARCHAR(4),
  "UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
  );

-- CLS_CITIES
execute pkg_drop.DROP_proc('CLS_CITIES','table');
CREATE TABLE CLS_CITIES (
  city_code VARCHAR2(30),
  city_name VARCHAR2(100),
  country_code VARCHAR2(50),
  "UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

-- CLS_ADDRESSES
execute pkg_drop.DROP_proc('CLS_ADDRESSES','table');
CREATE TABLE CLS_ADDRESSES
(
	"ADDRESS_CODE" VARCHAR2(50),
	"ADDRESS" VARCHAR2(50),
	"POSTAL_CODE" VARCHAR2(50),
	"PHONE" VARCHAR2(50),
	"CITY_CODE" VARCHAR2(30),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

-- CLS_DEPARTMENTS
execute pkg_drop.DROP_proc('cls_DEPARTMENTS','table');
CREATE TABLE cls_DEPARTMENTS
(
	"DEPARTMENT_CODE" VARCHAR2(10),
	"DEPARTMENT_DESC" VARCHAR2(50),
	"ADDRESS_CODE" VARCHAR2(10),
  "START_DT" DATE,
  "END_DT" DATE,
  "IS_ACTIVE" VARCHAR(1),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

-- CLS_CONSUMERS
execute pkg_drop.DROP_proc('CLS_CONSUMERS','table');
CREATE TABLE CLS_CONSUMERS
(
	"CONSUMER_CODE" VARCHAR(20),
	"CONSUMER_TITLE" VARCHAR2(100),
	"CONSUMER_RATE_CODE" VARCHAR(10),
	"ADDRESS_CODE" VARCHAR(50),
	"RESP_CODE" VARCHAR2(10),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

-- CLS_PROMOTIONS
execute pkg_drop.DROP_proc('cls_PROMOTIONS','table');
CREATE TABLE cls_PROMOTIONS (
  PROMO_CODE VARCHAR2(10),
  PROMO_NAME VARCHAR2(50),
  PROMO_DESC VARCHAR2(255),
  PROMO_COST NUMBER(8,2),
  START_DT DATE,
  END_DT DATE,
  IS_ACTIVE VARCHAR2(1) DEFAULT 'Y'
)
;

-- CLS_SALES
execute pkg_drop.DROP_proc('cls_SALES','table');
CREATE TABLE cls_SALES
(
	"SALE_DATE" DATE,
	"DEPARTMENT_CODE" VARCHAR2(20),
	"CONSUMER_CODE" VARCHAR2(20),
	"PRODUCT_CODE" VARCHAR2(20),
	"PROMO_CODE" VARCHAR2(20),
  "AMOUNT" NUMBER(10),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

--=========================================================
-- 3nf tables
--=========================================================

CREATE OR REPLACE PUBLIC SYNONYM CE_SALES FOR "BL_3NF"."CE_SALES"; 
CREATE OR REPLACE PUBLIC SYNONYM CE_RESPONSIBLE FOR "BL_3NF"."CE_RESPONSIBLE";
CREATE OR REPLACE PUBLIC SYNONYM CE_REGIONS FOR "BL_3NF"."CE_REGIONS";
CREATE OR REPLACE PUBLIC SYNONYM CE_PROMOTIONS FOR "BL_3NF"."CE_PROMOTIONS";
CREATE OR REPLACE PUBLIC SYNONYM CE_PRODUCTS FOR "BL_3NF"."CE_PRODUCTS";
CREATE OR REPLACE PUBLIC SYNONYM CE_PRODUCT_SUBCATEGORY FOR "BL_3NF"."CE_PRODUCT_SUBCATEGORY";
CREATE OR REPLACE PUBLIC SYNONYM CE_PRODUCT_CATEGORY FOR "BL_3NF"."CE_PRODUCT_CATEGORY";
CREATE OR REPLACE PUBLIC SYNONYM CE_PAY_STATE FOR "BL_3NF"."CE_PAY_STATE";
CREATE OR REPLACE PUBLIC SYNONYM CE_LOCALIZATION FOR "BL_3NF"."CE_LOCALIZATION";
CREATE OR REPLACE PUBLIC SYNONYM CE_DEPARTMENTS FOR "BL_3NF"."CE_DEPARTMENTS";
CREATE OR REPLACE PUBLIC SYNONYM CE_COUNTRIES FOR "BL_3NF"."CE_COUNTRIES";
CREATE OR REPLACE PUBLIC SYNONYM CE_CONSUMERS FOR "BL_3NF"."CE_CONSUMERS";
CREATE OR REPLACE PUBLIC SYNONYM CE_CONSUMER_RATE FOR "BL_3NF"."CE_CONSUMER_RATE";
CREATE OR REPLACE PUBLIC SYNONYM CE_CITIES FOR "BL_3NF"."CE_CITIES";
CREATE OR REPLACE PUBLIC SYNONYM CE_OCCUPATION FOR "BL_3NF"."CE_OCCUPATION";
CREATE OR REPLACE PUBLIC SYNONYM CE_ADDRESSES FOR "BL_3NF"."CE_ADDRESSES" ;
CREATE OR REPLACE PUBLIC SYNONYM CE_SUBREGIONS FOR "BL_3NF"."CE_SUBREGIONS" ;

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

-- CE_REGIONS
execute pkg_drop.DROP_proc('"BL_3NF"."CE_REGIONS"','table');
CREATE TABLE "BL_3NF"."CE_REGIONS"
(
	"REGION_ID" NUMBER(8,2) NOT NULL,
	"REGION_CODE" VARCHAR2(3),
	"REGION_NAME" VARCHAR2(50),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_regions','sequence');
CREATE SEQUENCE seq_regions
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE;

-- CE_SUBREGIONS
execute pkg_drop.DROP_proc('"BL_3NF"."CE_SUBREGIONS"','table');
CREATE TABLE "BL_3NF"."CE_SUBREGIONS"
(
	"SUBREGION_ID" NUMBER(8,2) NOT NULL,
	"SUBREGION_CODE" VARCHAR2(4),
	"SUBREGION_NAME" VARCHAR2(100),
	"REGION_ID" NUMBER(8,2),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_subregions','sequence');
CREATE SEQUENCE seq_subregions
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE;

-- CE_COUNTRIES
execute pkg_drop.DROP_proc('"BL_3NF"."CE_COUNTRIES"','table');
CREATE TABLE "BL_3NF"."CE_COUNTRIES"
(
	"COUNTRY_ID" NUMBER(8,2) NOT NULL,
	"COUNTRY_CODE2" VARCHAR2(10),
  "COUNTRY_CODE3" VARCHAR2(10),
	"COUNTRY_NAME" VARCHAR2(100),
	"SUBREGION_ID" NUMBER(8,2),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_countries','sequence');
CREATE SEQUENCE seq_countries
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE;

-- CE_CITIES
execute pkg_drop.DROP_proc('"BL_3NF"."CE_CITIES"','table');
CREATE TABLE "BL_3NF"."CE_CITIES"
(
	"CITY_ID" NUMBER(8,2) NOT NULL,
	"CITY_CODE" VARCHAR2(30),
	"CITY_NAME" VARCHAR2(50),
	"COUNTRY_ID" NUMBER(8,2),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_cities','sequence');
CREATE SEQUENCE seq_cities
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE;

-- CE_ADDRESSES
execute pkg_drop.DROP_proc('"BL_3NF"."CE_ADDRESSES"','table');
CREATE TABLE "BL_3NF"."CE_ADDRESSES"
(
	"ADDRESS_ID" NUMBER(10) NOT NULL,
	"ADDRESS_CODE" VARCHAR2(50),
	"ADDRESS" VARCHAR2(50),
	"POSTAL_CODE" VARCHAR2(50),
	"PHONE" VARCHAR2(50),
	"CITY_ID" NUMBER(10),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_addresses','sequence');
CREATE SEQUENCE seq_addresses
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE;

-- CE_DEPARTMENTS
execute pkg_drop.DROP_proc('"BL_3NF"."CE_DEPARTMENTS"','table');
CREATE TABLE "BL_3NF"."CE_DEPARTMENTS"
(
	"DEPARTMENT_ID" NUMBER(8,2) NOT NULL,
	"DEPARTMENT_CODE" VARCHAR(10),
	"DEPARTMENT_DESC" VARCHAR2(50),
	"ADDRESS_ID" NUMBER(10),
  "START_DT" DATE,
  "END_DT" DATE,
  "IS_ACTIVE" VARCHAR(1),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_departments','sequence');
CREATE SEQUENCE seq_departments
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE;   

-- CE_PRODUCT_CATEGORY
execute pkg_drop.DROP_proc('"BL_3NF"."CE_PRODUCT_CATEGORY"','table');
CREATE TABLE "BL_3NF"."CE_PRODUCT_CATEGORY"
(
	"CATEGORY_ID" NUMBER(8,2) NOT NULL,
	"CATEGORY_CODE" VARCHAR2(50),
	"CATEGORY_NAME" VARCHAR2(50),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_product_category','sequence');
CREATE SEQUENCE seq_product_category
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE;   

-- CE_PRODUCT_SUBCATEGORY
execute pkg_drop.DROP_proc('"BL_3NF"."CE_PRODUCT_SUBCATEGORY"','table');
CREATE TABLE "BL_3NF"."CE_PRODUCT_SUBCATEGORY"
(
	"SUBCATEGORY_ID" NUMBER(8,2) NOT NULL,
	"SUBCATEGORY_CODE" VARCHAR2(50),
	"SUBCATEGORY_NAME" VARCHAR2(50),
	"CATEGORY_ID" NUMBER(8,2),
	"SIZE" NUMBER(3),
	"TOBACCO" NUMBER(3,1),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_product_subcategory','sequence');
CREATE SEQUENCE seq_product_subcategory
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE;  

-- CE_LOCALIZATION
execute pkg_drop.DROP_proc('"BL_3NF"."CE_LOCALIZATION"','table');
CREATE TABLE "BL_3NF"."CE_LOCALIZATION"
(
	"LOCALIZATION_ID" NUMBER(8,2) NOT NULL,
	"LOCALIZATION_NAME" VARCHAR2(50)
)
;
      
-- CE_PRODUCTS
execute pkg_drop.DROP_proc('"BL_3NF"."CE_PRODUCTS"','table');
CREATE TABLE "BL_3NF"."CE_PRODUCTS"
(
	"PRODUCT_ID" NUMBER(8) NOT NULL,
	"PRODUCT_CODE" VARCHAR2(50),
	"PRODUCT_NAME" VARCHAR2(50),
	"LOCALIZATION_ID" NUMBER(8,2),
	"CATEGORY_ID" NUMBER(8,2),
  "PRICE" NUMBER(8,2),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_product','sequence');
CREATE SEQUENCE seq_product
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE; 

-- CE_OCCUPATION
execute pkg_drop.DROP_proc('"BL_3NF"."CE_OCCUPATION"','table');
CREATE TABLE "BL_3NF"."CE_OCCUPATION"
(
	"OCCUPATION_ID" NUMBER(8,2) NOT NULL,
	"OCCUPATION_CODE" VARCHAR2(100),
	"OCCUPATION_NAME" VARCHAR2(100),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_occupation','sequence');
CREATE SEQUENCE seq_occupation
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE; 

-- CE_RESPONSIBLE
execute pkg_drop.DROP_proc('"BL_3NF"."CE_RESPONSIBLE"','table');
CREATE TABLE "BL_3NF"."CE_RESPONSIBLE"
(
	"RESP_ID" NUMBER(8,2) NOT NULL,
	"RESP_CODE" VARCHAR2(50),
	"FIRST_NAME" VARCHAR2(50) DEFAULT ON NULL '-98',
	"LAST_NAME" VARCHAR2(50) DEFAULT ON NULL '-98',
	"PHONE" VARCHAR2(50),
	"EMAIL" VARCHAR2(50),
	"BIRTHDAY" DATE,
	"AGE" NUMBER(8,2),
	"OCCUPATION_ID" NUMBER(8,2),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_responsible','sequence');
CREATE SEQUENCE seq_responsible
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE; 

-- CE_CONSUMERS
execute pkg_drop.DROP_proc('"BL_3NF"."CE_CONSUMERS"','table');
CREATE TABLE "BL_3NF"."CE_CONSUMERS"
(
	"CONSUMER_ID" NUMBER(12) NOT NULL,
	"CONSUMER_CODE" VARCHAR2(30),
	"CONSUMER_TITLE" VARCHAR2(100),
	"CONSUMER_RATE_ID" NUMBER(12),
	"ADDRESS_ID" NUMBER(12),
	"RESP_ID" NUMBER(12),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_consumer','sequence');
CREATE SEQUENCE seq_consumer
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE; 

-- CE_CONSUMER_RATE
execute pkg_drop.DROP_proc('"BL_3NF"."CE_CONSUMER_RATE"','table');
CREATE TABLE "BL_3NF"."CE_CONSUMER_RATE"
(
	"CONSUMER_RATE_ID" NUMBER(8,2) NOT NULL,
	"RATE_TITLE" VARCHAR2(50)
)
;

-- CE_PROMOTIONS
execute pkg_drop.DROP_proc('"BL_3NF"."CE_PROMOTIONS"','table');
CREATE TABLE "BL_3NF"."CE_PROMOTIONS"
(
	"PROMO_ID" NUMBER(8,2) NOT NULL,
	"PROMO_CODE" VARCHAR2(50),
	"PROMO_NAME" VARCHAR2(50),
	"PROMO_DESC" VARCHAR2(50),
  "PROMO_COST" NUMBER(8,2),
	"START_DT" DATE,
	"END_DT" DATE,
	"IS_ACTIVE" VARCHAR2(1),
	"UPDATE_DT" DATE,
	"INSERT_DT" DATE 
)
;

execute pkg_drop.DROP_proc('seq_promotion','sequence');
CREATE SEQUENCE seq_promotion
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE; 

-- CE_SALES
execute pkg_drop.DROP_proc('"BL_3NF"."CE_SALES"','table');
CREATE TABLE "BL_3NF"."CE_SALES"
(
  "SALE_ID" NUMBER(15,2) NOT NULL,
  "SALE_DATE" DATE,
  "DEPARTMENT_ID" NUMBER(15,2),
  "CONSUMER_ID" NUMBER(15,2),
  "PRODUCT_ID" NUMBER(15,2),
  "PROMO_ID" NUMBER(15,2),
  "AMOUNT" NUMBER(15,2),
  "UPDATE_DT" DATE,
  "INSERT_DT" DATE DEFAULT TRUNC(SYSDATE)
)
;

execute pkg_drop.DROP_proc('seq_sale','sequence');
CREATE SEQUENCE seq_sale
      INCREMENT BY 1 
          START WITH 1 
       MINVALUE 1 
        NOCYCLE; 





---------------------------------------------------------------------------------------------
-- CONSTRAINTS-------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

ALTER TABLE "BL_3NF"."CE_SALES" 
 ADD CONSTRAINT "PK_SALES"
	PRIMARY KEY ("SALE_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_RESPONSIBLE" 
 ADD CONSTRAINT "PK_RESPONSIBLE"
	PRIMARY KEY ("RESP_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_REGIONS" 
 ADD CONSTRAINT "PK_REGIONS"
	PRIMARY KEY ("REGION_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_PROMOTIONS" 
 ADD CONSTRAINT "PK_PROMOTIONS"
	PRIMARY KEY ("PROMO_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_PRODUCTS" 
 ADD CONSTRAINT "PK_PRODUCTS"
	PRIMARY KEY ("PRODUCT_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_PRODUCT_SUBCATEGORY" 
 ADD CONSTRAINT "PK_PRODUCT_SUBC_01"
	PRIMARY KEY ("SUBCATEGORY_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_PRODUCT_CATEGORY" 
 ADD CONSTRAINT "PK_PRODUCT_CATEGORY"
	PRIMARY KEY ("CATEGORY_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_LOCALIZATION" 
 ADD CONSTRAINT "PK_LOCALIZATION"
	PRIMARY KEY ("LOCALIZATION_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_DEPARTMENTS" 
 ADD CONSTRAINT "PK_DEPARTMENTS"
	PRIMARY KEY ("DEPARTMENT_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_COUNTRIES" 
 ADD CONSTRAINT "PK_COUNTRIES"
	PRIMARY KEY ("COUNTRY_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_CONSUMERS" 
 ADD CONSTRAINT "PK_CONSUMERS"
	PRIMARY KEY ("CONSUMER_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_CONSUMER_RATE"  
 ADD CONSTRAINT "PK_CONSUMER_RATE"
	PRIMARY KEY ("CONSUMER_RATE_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_CITIES" 
 ADD CONSTRAINT "PK_CITIES"
	PRIMARY KEY ("CITY_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_OCCUPATION" 
 ADD CONSTRAINT "PK_BL_3NF."
	PRIMARY KEY ("OCCUPATION_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_ADDRESSES" 
 ADD CONSTRAINT "PK_ADDRESSES"
	PRIMARY KEY ("ADDRESS_ID") USING INDEX
;

ALTER TABLE "BL_3NF"."CE_SUBREGIONS"
 ADD CONSTRAINT "PK_SUBREGIONS"
  PRIMARY KEY ("SUBREGION_ID") USING INDEX
;

-- 3nf
--------------------------------------------------------------------------------
ALTER TABLE "BL_3NF"."CE_SALES" 
 ADD CONSTRAINT "FK_SALES_CONSUMERS"
	FOREIGN KEY ("CONSUMER_ID") REFERENCES "BL_3NF"."CE_CONSUMERS" ("CONSUMER_ID")
;

ALTER TABLE "BL_3NF"."CE_SALES" 
 ADD CONSTRAINT "FK_SALES_DEPARTMENTS"
	FOREIGN KEY ("DEPARTMENT_ID") REFERENCES "BL_3NF"."CE_DEPARTMENTS" ("DEPARTMENT_ID")
;

ALTER TABLE "BL_3NF"."CE_SALES" 
 ADD CONSTRAINT "FK_SALES_PRODUCTS"
	FOREIGN KEY ("PRODUCT_ID") REFERENCES "BL_3NF"."CE_PRODUCTS" ("PRODUCT_ID")
;

ALTER TABLE "BL_3NF"."CE_SALES" 
 ADD CONSTRAINT "FK_SALES_PROMOTIONS"
	FOREIGN KEY ("PROMO_ID") REFERENCES "BL_3NF"."CE_PROMOTIONS" ("PROMO_ID")
;

ALTER TABLE "BL_3NF"."CE_RESPONSIBLE" 
 ADD CONSTRAINT "FK_RESPONSIBLE_OCCUPATION"
	FOREIGN KEY ("OCCUPATION_ID") REFERENCES "BL_3NF"."CE_OCCUPATION" ("OCCUPATION_ID")
;

ALTER TABLE "BL_3NF"."CE_PRODUCTS" 
 ADD CONSTRAINT "FK_PRODUCTS_LOCALIZATION"
	FOREIGN KEY ("LOCALIZATION_ID") REFERENCES "BL_3NF"."CE_LOCALIZATION" ("LOCALIZATION_ID")
;

ALTER TABLE "BL_3NF"."CE_PRODUCTS" 
 ADD CONSTRAINT "FK_PRODUCTS_PRODUCT_CATEGORY"
	FOREIGN KEY ("CATEGORY_ID") REFERENCES "BL_3NF"."CE_PRODUCT_CATEGORY" ("CATEGORY_ID")
;

ALTER TABLE "BL_3NF"."CE_PRODUCT_SUBCATEGORY" 
 ADD CONSTRAINT "FK_PRODUCT_SUBC_PRODUCT_CAT_01"
	FOREIGN KEY ("CATEGORY_ID") REFERENCES "BL_3NF"."CE_PRODUCT_CATEGORY" ("CATEGORY_ID")
;

ALTER TABLE "BL_3NF"."CE_DEPARTMENTS" 
 ADD CONSTRAINT "FK_DEPARTMENTS_ADDRESSES"
	FOREIGN KEY ("ADDRESS_ID") REFERENCES "BL_3NF"."CE_ADDRESSES" ("ADDRESS_ID")
;

ALTER TABLE "BL_3NF"."CE_COUNTRIES" 
 ADD CONSTRAINT "FK_COUNTRIES_SUBREGIONS"
	FOREIGN KEY ("SUBREGION_ID") REFERENCES "BL_3NF"."CE_SUBREGIONS" ("SUBREGION_ID")
;

ALTER TABLE "BL_3NF"."CE_CONSUMERS" 
 ADD CONSTRAINT "FK_CONSUMERS_ADDRESSES"
	FOREIGN KEY ("ADDRESS_ID") REFERENCES "BL_3NF"."CE_ADDRESSES" ("ADDRESS_ID")
;

ALTER TABLE "BL_3NF"."CE_CONSUMERS" 
 ADD CONSTRAINT "FK_CONSUMERS_CONSUMER_RATE"
	FOREIGN KEY ("CONSUMER_RATE_ID") REFERENCES "BL_3NF"."CE_CONSUMER_RATE" ("CONSUMER_RATE_ID")
;

ALTER TABLE "BL_3NF"."CE_CONSUMERS" 
 ADD CONSTRAINT "FK_CONSUMERS_RESPONSIBLE"
	FOREIGN KEY ("RESP_ID") REFERENCES "BL_3NF"."CE_RESPONSIBLE" ("RESP_ID")
;

ALTER TABLE "BL_3NF"."CE_CITIES" 
 ADD CONSTRAINT "FK_CITIES_COUNTRIES"
	FOREIGN KEY ("COUNTRY_ID") REFERENCES "BL_3NF"."CE_COUNTRIES" ("COUNTRY_ID")
;

ALTER TABLE "BL_3NF"."CE_ADDRESSES" 
 ADD CONSTRAINT "FK_ADDRESSES_CITIES"
	FOREIGN KEY ("CITY_ID") REFERENCES "BL_3NF"."CE_CITIES" ("CITY_ID")
;

ALTER TABLE "BL_3NF"."CE_SUBREGIONS" 
 ADD CONSTRAINT "FK_SUBREGIONS_REGIONS"
	FOREIGN KEY ("REGION_ID") REFERENCES "BL_3NF"."CE_REGIONS" ("REGION_ID")
;
