--GROUPING_ID
SELECT DECODE(GROUPING_ID((TO_CHAR(TIME_ID,'YYYY-MM'))), '1', 'GRAND TOTAL', TO_CHAR(TIME_ID,'YYYY-MM')) AS YEAR_MONTH,
  (
  CASE
    WHEN (DECODE(GROUPING_ID((TO_CHAR(TIME_ID,'YYYY-MM')),CHAN.CHANNEL_DESC), '1', 'Total by Channels', CHAN.CHANNEL_DESC))IS NULL
    THEN ' '
    ELSE (DECODE(GROUPING_ID((TO_CHAR(TIME_ID,'YYYY-MM')),CHAN.CHANNEL_DESC), '1', 'Total by Channels', CHAN.CHANNEL_DESC))
  END) AS CHANNEL,
  (
  CASE
    WHEN (DECODE(GROUPING_ID((TO_CHAR(TIME_ID,'YYYY-MM')),CHAN.CHANNEL_DESC, CNTR.COUNTRY_NAME), '1', (
      CASE
        WHEN CHAN.CHANNEL_DESC LIKE 'Internet'
        THEN 'Internet Sales Total by States'
        ELSE 'Direct Sales Total by States'
      END),CNTR.COUNTRY_NAME)) IS NULL
    THEN ' '
    ELSE (DECODE(GROUPING_ID((TO_CHAR(TIME_ID,'YYYY-MM')),CHAN.CHANNEL_DESC, CNTR.COUNTRY_NAME), '1', (
      CASE
        WHEN CHAN.CHANNEL_DESC LIKE 'Internet'
        THEN 'Internet Sales Total by States'
        ELSE 'Direct Sales Total by States'
      END),CNTR.COUNTRY_NAME))
  END) AS COUNTRY,
  (
  CASE
    WHEN MAX(AMOUNT_SOLD) > 1000
    THEN (SUBSTR(ROUND(MAX(AMOUNT_SOLD)),1,2)
      || ','
      || (
      CASE
        WHEN MAX(AMOUNT_SOLD) > 1000
        THEN SUBSTR(ROUND(MAX(AMOUNT_SOLD)),-3,3)
        ELSE SUBSTR(ROUND(MAX(AMOUNT_SOLD)),-2,3)
      END))
    ELSE TO_CHAR(ROUND(MAX(AMOUNT_SOLD)))
  END) AS MAX_SALES$,
  (
  CASE
    WHEN MIN(AMOUNT_SOLD) > 1000
    THEN (SUBSTR(ROUND(MIN(AMOUNT_SOLD)),1,2)
      || ','
      || (
      CASE
        WHEN MIN(AMOUNT_SOLD) > 1000
        THEN SUBSTR(ROUND(MIN(AMOUNT_SOLD)),-3,3)
        ELSE SUBSTR(ROUND(MIN(AMOUNT_SOLD)),-2,3)
      END))
    ELSE TO_CHAR(ROUND(MIN(AMOUNT_SOLD)))
  END) AS MAX_SALES$,
  (
  CASE
    WHEN SUM(AMOUNT_SOLD) > 9999
    THEN (SUBSTR(ROUND(SUM(AMOUNT_SOLD)),1,2)
      || ','
      || (
      CASE
        WHEN SUM(AMOUNT_SOLD) > 1000
        THEN SUBSTR(ROUND(SUM(AMOUNT_SOLD)),-3,3)
        ELSE SUBSTR(ROUND(SUM(AMOUNT_SOLD)),-2,3)
      END))
    ELSE (SUBSTR(ROUND(SUM(AMOUNT_SOLD)),1,1)
      || ','
      || SUBSTR(ROUND(SUM(AMOUNT_SOLD)),-3,4))
  END) AS SALES$
FROM SH.SALES SAL
LEFT JOIN SH.CUSTOMERS CUST
ON SAL.CUST_ID = CUST.CUST_ID
LEFT JOIN SH.CHANNELS CHAN
ON SAL.CHANNEL_ID = CHAN.CHANNEL_ID
LEFT JOIN SH.COUNTRIES CNTR
ON CUST.COUNTRY_ID               = CNTR.COUNTRY_ID
WHERE TO_CHAR(TIME_ID,'YYYY-MM') = '2000-12'
AND CHAN.CHANNEL_DESC           IN ('Internet', 'Direct Sales')
GROUP BY ROLLUP( TO_CHAR(TIME_ID,'YYYY-MM'), CHAN.CHANNEL_DESC, CNTR.COUNTRY_NAME);



----TOTALS
WITH TST AS
  ( SELECT DISTINCT PROD.PROD_NAME                                                                                                                                     AS PRODUCT_NAME,
    NTH_VALUE(SUM(AMOUNT_SOLD),1) OVER (PARTITION BY PROD.PROD_NAME ORDER BY TIM.CALENDAR_QUARTER_NUMBER ASC RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS Q1,
    NTH_VALUE(SUM(AMOUNT_SOLD),2) OVER (PARTITION BY PROD.PROD_NAME ORDER BY TIM.CALENDAR_QUARTER_NUMBER ASC RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS Q2,
    NTH_VALUE(SUM(AMOUNT_SOLD),3) OVER (PARTITION BY PROD.PROD_NAME ORDER BY TIM.CALENDAR_QUARTER_NUMBER ASC RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS Q3,
    NTH_VALUE(SUM(AMOUNT_SOLD),4) OVER (PARTITION BY PROD.PROD_NAME ORDER BY TIM.CALENDAR_QUARTER_NUMBER ASC RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS Q4,
    SUM(SUM(AMOUNT_SOLD)) OVER (PARTITION BY PROD.PROD_NAME)                                                                                                           AS YEAR_SUM
  FROM SH.SALES SAL
  LEFT JOIN SH.TIMES TIM
  ON SAL.TIME_ID = TIM.TIME_ID
  LEFT JOIN SH.PRODUCTS PROD
  ON SAL.PROD_ID = PROD.PROD_ID
  LEFT JOIN SH.CUSTOMERS CUST
  ON SAL.CUST_ID = CUST.CUST_ID
  LEFT JOIN SH.COUNTRIES CNTR
  ON CUST.COUNTRY_ID = CNTR.COUNTRY_ID
  WHERE PROD.PROD_CATEGORY LIKE 'Photo'
  AND TO_CHAR(SAL.TIME_ID,'YYYY') = '2000'
  AND CNTR.COUNTRY_SUBREGION       = 'Asia'
  GROUP BY PROD.PROD_NAME,
    TIM.CALENDAR_QUARTER_NUMBER
  )
SELECT DECODE(GROUPING(PRODUCT_NAME),0,PRODUCT_NAME,'GRAND TOTAL') AS PRODUCT_NAME,
  SUM(Q1)                                                          AS Q1,
  SUM(Q2)                                                          AS Q2,
  SUM(Q3)                                                          AS Q3,
  SUM(Q4)                                                          AS Q4,
  SUM(YEAR_SUM)                                                    AS YEAR_SUM
FROM TST
GROUP BY ROLLUP(PRODUCT_NAME)
ORDER BY TST.PRODUCT_NAME NULLS LAST;

--PIVOT

